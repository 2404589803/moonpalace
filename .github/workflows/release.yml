name: release

on:
  push:
    tags:
      - "v*"

jobs:
  build-macos-amd64:
    runs-on: macos-13
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.22.0"
      - uses: actions/checkout@v4
      - run: go mod tidy
      - run: go build -o moonpalace-macos-amd64
      - uses: actions/upload-artifact@v4
        with:
          name: macos-amd64
          path: moonpalace-macos-amd64

  build-macos-arm64:
    runs-on: macos-14
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.22.0"
      - uses: actions/checkout@v4
      - run: go mod tidy
      - run: go build -o moonpalace-macos-arm64
      - uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          path: moonpalace-macos-arm64

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.22.0"
      - uses: actions/checkout@v4
      - run: go mod tidy
      - run: go build -o moonpalace-windows.exe
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: moonpalace-windows.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.22.0"
      - uses: actions/checkout@v4
      - run: go mod tidy
      - run: go build -o moonpalace-linux
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: moonpalace-linux

  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-release@v1.1.4
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}

  release:
    runs-on: ubuntu-latest
    needs: [build-macos-amd64, build-macos-arm64, build-windows, build-linux, create-release]
    strategy:
      matrix:
        include: 
          - target: macos-amd64
            bin: macos-amd64
          - target: macos-arm64
            bin: macos-arm64
          - target: windows
            bin: windows.exe
          - target: linux
            bin: linux
    steps:
      - uses: actions/download-artifact@main
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}
      - uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ matrix.target }}/moonpalace-${{ matrix.bin }}
          asset_name: moonpalace-${{ matrix.bin }}
          asset_content_type: application/octet-stream
          
      
    
